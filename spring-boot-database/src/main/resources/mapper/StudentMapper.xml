<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="top.hyzhu.springboot.database.mapper.StudentMapper">
    <insert id="insert" parameterType="Student">
        INSERT INTO t_student (clazz_id, student_name, hometown, birthday)
        VALUES (#{clazzId},#{studentName},#{hometown},#{birthday})
    </insert>

    <select id="findById" resultType="student">
        SELECT *
        FROM t_student
        WHERE student_id = #{studentId}
    </select>

    <update id="updateById" parameterType="Student">
        UPDATE t_student
        <set>
--             判断当前Student对象中的班级ID是否为空，如果不为空，则更新clazz_id字段
            <if test="clazzId != null">
                clazz_id = #{clazzId}
            </if>
            <if test="studentName != null">
                student_name = #{studentName}
            </if>
            <if test="hometown != null">
                hometown = #{hometown}
            </if>
            <if test="birthday != null">
                birthday = #{birthday}
            </if>
        </set>
        WHERE student_id = #{studentId}
    </update>

    <delete id="deleteById" parameterType="int">
        DELETE
        FROM t_student
        WHERE student_id = #{studentId}
    </delete>

    <insert id="batchInsert" parameterType="Student">
        INSERT INTO t_student VALUES
--  要遍历的集合，当前遍历到的Student对象，当前遍历到的Student对象的索引，每条插入语句之间的分隔符
        <foreach collection="students" item="student" index="index" separator=",">
            (#{student.studentId},#{student.clazzId},#{student.studentName},#{student.hometown},#{student.birthday})
        </foreach>
    </insert>

    <delete id="batchDelete" parameterType="int">
        DELETE FROM t_student
        WHERE  student_id IN
--  open属性为"(", separator属性为",", close属性为")"，表示遍历开始和结束的符号。eg:DELETE FROM t_student WHERE student_id IN (1, 2, 3)
        <foreach collection="idList" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <!--批量修改-->
<!--    批量修改实际上是单次更新的循环，所以参数是 List，传入的是一个学生信息列表-->
    <update id="batchUpdate" parameterType="java.util.List">
        <foreach collection="students" item="student" index="index" separator=";">
            UPDATE t_student t
            <set>
                <if test="student.clazzId != null">
                    clazz_id = #{student.clazzId},
                </if>
                <if test="student.studentName != null">
                    student_name = #{student.studentName},
                </if>
                <if test="student.hometown != null">
                    hometown = #{student.hometown},
                </if>
                <if test="student.birthday != null">
                    birthday = #{student.birthday},
                </if>
            </set>
            WHERE t.student_id = #{student.studentId}
        </foreach>
    </update>

<!--动态查询-->
    <select id="selectByDynamicSql" resultType="Student" parameterType="student">
        SELECT *
        FROM t_student
--         查询条件，这里设置为1=1，永远为真
        WHERE 1 = 1
        <choose>
            <when test="clazzId != null">
--           当clazzId不为空时，查询班级ID等于传入的clazzId的数据
                AND clazz_id = #{clazzId}
            </when>
            <when test="hometown != null">
                AND hometown LIKE "%"#{hometown}"%"
            </when>
        </choose>
    </select>


</mapper>